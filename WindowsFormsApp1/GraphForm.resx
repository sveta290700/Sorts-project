<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>